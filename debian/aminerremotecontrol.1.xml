<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. --><!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [

<!--

`xsltproc -''-nonet \
          -''-param man.charmap.use.subset "0" \
          -''-param make.year.ranges "1" \
          -''-param make.single.year.ranges "1" \
          /usr/share/xml/docbook/stylesheet/docbook-xsl/manpages/docbook.xsl \
          manpage.xml'

A manual page <package>.<section> will be generated. You may view the
manual page with: nroff -man <package>.<section> | less'. A typical entry
in a Makefile or Makefile.am is:

DB2MAN = /usr/share/sgml/docbook/stylesheet/xsl/docbook-xsl/manpages/docbook.xsl
XP     = xsltproc -''-nonet -''-param man.charmap.use.subset "0"

manpage.1: manpage.xml
        $(XP) $(DB2MAN) $<

The xsltproc binary is found in the xsltproc package. The XSL files are in
docbook-xsl. A description of the parameters you can use can be found in the
docbook-xsl-doc-* packages. Please remember that if you create the nroff
version in one of the debian/rules file targets (such as build), you will need
to include xsltproc and docbook-xsl in your Build-Depends control field.
Alternatively use the xmlto command/package. That will also automatically
pull in xsltproc and docbook-xsl.

Notes for using docbook2x: docbook2x-man does not automatically create the
AUTHOR(S) and COPYRIGHT sections. In this case, please add them manually as
<refsect1> ... </refsect1>.

To disable the automatic creation of the AUTHOR(S) and COPYRIGHT sections
read /usr/share/doc/docbook-xsl/doc/manpages/authors.html. This file can be
found in the docbook-xsl-doc-html package.

Validation can be done using: `xmllint -''-noout -''-valid manpage.xml`

General documentation about man-pages and man-page-formatting:
man(1), man(7), http://www.tldp.org/HOWTO/Man-Page/

-->

  <!-- Fill in your name for FIRSTNAME and SURNAME. -->
  <!ENTITY dhfirstname "Markus">
  <!ENTITY dhsurname   "Wurzenberger">
  <!-- dhusername could also be set to "&dhfirstname; &dhsurname;". -->
  <!ENTITY dhusername  "Markus Wurzenberger">
  <!ENTITY dhemail     "markus.wurzenberger@ait.ac.at">
  <!-- SECTION should be 1-8, maybe w/ subsection other parameters are
       allowed: see man(7), man(1) and
       http://www.tldp.org/HOWTO/Man-Page/q2.html. -->
  <!ENTITY dhsection   "1">
  <!-- TITLE should be something like "User commands" or similar (see
       http://www.tldp.org/HOWTO/Man-Page/q2.html). -->
  <!ENTITY dhtitle     "logdata-anomaly-miner User Manual">
  <!ENTITY dhucpackage "LOGDATA-ANOMALY-MINER">
  <!ENTITY dhpackage   "logdata-anomaly-miner">
]>
<refentry>
  <refentryinfo>
    <title>&dhtitle;</title>
    <productname>&dhpackage;</productname>
    <authorgroup>
      <author>
        <firstname>&dhfirstname;</firstname>
        <surname>&dhsurname;</surname>
        <contrib>Wrote this manpage for the Debian system.</contrib>
        <address>
          <email>&dhemail;</email>
        </address>
      </author>
    </authorgroup>
    <copyright>
      <year>2016</year>
      <holder>&dhusername;</holder>
    </copyright>
    <legalnotice>
      <para>This manual page was written for the Debian system
        (and may be used by others).</para>
      <para>Permission is granted to copy, distribute and/or modify this
        document under the terms of the GNU General Public License,
        Version 3.</para>
      <para>On Debian systems, the complete text of the GNU General Public
        License can be found in
        <filename>/usr/share/common-licenses/GPL</filename>.</para>
    </legalnotice>
  </refentryinfo>
  <refmeta>
    <refentrytitle>AMINERREMOTECONTROL</refentrytitle>
    <manvolnum>&dhsection;</manvolnum>
  </refmeta>
  <refnamediv>
    <refname>aminerremotecontrol</refname>
    <refpurpose>lightweight tool for log checking, log analysis </refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>aminerremotecontrol</command>
      <arg choice="opt">
        <option>[--exec <replaceable>command</replaceable>] | [--exec-file <replaceable>file</replaceable>]</option>
      </arg>
      <arg choice="plain">
        <option>[OPTIONS]...</option>
      </arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1 id="description">
    <title>DESCRIPTION</title>
    <para>This manual page documents briefly the
      <command>aminerremotecontrol</command> command. The command
      executes arbitrary remote control commands in a running
      aminer child process. As child process is usually running
      with lowered privileges or SELinux/AppArmor confinement,
      you may observe unexpected results when accessing resources
      outside the child process, e.g. files. For more details
      see also packaged documentation at
      /usr/share/doc/logdata-anomaly-miner.</para>
    <refsect2 id="example_usecases">
      <title>Example usecases:</title>
      <variablelist>
        <varlistentry>
          <term>
            <option>Print a property of the running AminerConfig:</option>
          </term>
          <listitem>
            <para>/usr/bin/aminerremotecontrol --data &apos;[&quot;LogResourceList&quot;]&apos; --exec &apos;
            print_config_property(analysis_context,  &quot;%s&quot; % remote_control_data[0])&apos;</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <option>Print the complete AminerConfig:</option>
          </term>
          <listitem>
            <para>/usr/bin/aminerremotecontrol --exec &apos;print_current_config(analysis_context)&apos;</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <option>Print a property of the running AminerConfig, change it and confirm the changed value by printing it again:</option>
          </term>
          <listitem>
            <para>/usr/bin/aminerremotecontrol --data &apos;[&quot;Resources.MaxMemoryUsage&quot;, -1]&apos; --exec &apos;
            print_config_property(analysis_context,  &quot;%s&quot; % remote_control_data[0])&apos; --exec &apos;change_config_property(analysis_context, &quot;%s&quot; % remote_control_data[0], remote_control_data[1])&apos; --exec &apos;
            print_config_property(analysis_context,  &quot;%s&quot; % remote_control_data[0])&apos;</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect2>
  </refsect1>
  <refsect1 id="options">
    <title>OPTIONS</title>
    <para>
      with long options starting with two dashes (&apos;-&apos;).  A summary of
      options is included below. For a complete description, see the
      <citerefentry>
        <refentrytitle>info</refentrytitle>
        <manvolnum>1</manvolnum>
      </citerefentry> files.</para>
    <variablelist>
<!-- Use the variablelist.term.separator and the
           variablelist.term.break.after parameters to
           control the term elements. -->      <varlistentry>
        <term>
          <option>--control-socket, -c <replaceable>socket</replaceable></option>
        </term>
        <listitem>
          <para>Specify the Unix domain remote control socket
          path, otherwise /var/run/aminer-remote.socket is used.
          The socket is opened by aminer when &apos;RemoteControlSocket&apos;
          feature is enabled in configuration. As the socket is
          of SOCK_STREAM type, it may also be forwarded via any
          other stream forwarders, e.g. socat (see UNIX-CONNECT
          and UNIX-LISTEN) and SSH (see LocalForward, DynamicForward).
          Access control is only done by file system permissions
          (DAC) of the socket, so make sure not to widen the access
          on error.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <option>--exec, -e <replaceable>command</replaceable></option>
        </term>
        <listitem>
          <para>For each --exec option, the next argument is sent
          in a separate remote execution request using additional
          execution data (see --data). The command is executed in
          a separate execution namespace with only some
          variables added to the local namespace, e.g. execution
          data is available as &apos;remote_control_data&apos;. When setting
          the local variable &apos;remoteControlResponse&apos; within the
          executed command, the object is serialized using json and
          sent back in the response.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <option>--exec-file, -f <replaceable>file</replaceable></option>
        </term>
        <listitem>
          <para>For each --exec-file option, the named file is
          loaded and content submitted in the very same way as
          if --exec parameter with content as string would have
          been used.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <option>--data, -d <replaceable>data</replaceable></option>
        </term>
        <listitem>
          <para>This parameter defines a json string defining
          Python objects, that will be sent with all subsequent
          --exec operations until changed again using another
          --data option. Take into account, that there are size
          limits for the request, very large data objects may
          exceed those limits. The execution context will expose
          the data as variable &apos;remote_control_data&apos;.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <option>--string-response, -s</option>
        </term>
        <listitem>
          <para>When set, aminerremotecontrol will not pass the
          result to repr. The returned object is just converted
          to a plain string via str(object) and the result is
          printed to avoid escaping of quotation marks, newlines,
          .... WARNING: This might be insecure: without escaping
          the printed data may contain terminal control sequences
          to exploit vulnerabilities or misconfiguration of your
          terminal to execute code with privileges of terminal
          or the process calling aminerremotecontrol (usually
          root).</para>
        </listitem>
      </varlistentry>
    </variablelist>
    <refsect2 id="command">
      <title>Commands</title>
      <variablelist>
        <varlistentry>
          <term>
            <option>
              <replaceable>change_config_property(analysis_context,property_name,value)</replaceable>
            </option>
          </term>
          <listitem>
            <para>This method allows you to change properties from the 
            AminerConfig at runtime. For every property to be changed 
            this method must be used. The method prints 
            &quot;<replaceable>property_name</replaceable> changed to
            <replaceable>value</replaceable> successfully.&quot; if the 
            changes were successful and an individual message if the changes failed.</para>
            <para>Read more about which properties can be changed in the <option>Valid Property Names </option>section.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <option>
              <replaceable>change_attribute_of_registered_analysis_component(analysis_context,component_name,attribute,value)</replaceable>
            </option>
          </term>
          <listitem>
            <para>This method allows you to change attributes from components of the 
            AminerConfig at runtime. For every attribute to be changed this method 
            must be used. The method prints &quot;<replaceable>component_name.attribute </replaceable> changed to <replaceable>value</replaceable> successfully.
            &quot; if the changes were successful and an individual message if the changes failed.
            The type of the new <replaceable>value</replaceable> must be the same like the
            old value of the <replaceable>component_name.attribute</replaceable></para>
            <para><replaceable>example</replaceable>: aminerremotecontrol --exec 
            &quot;change_attribute_of_registered_analysis_component(analysis_context,
            &apos;NewMatchPath&apos;, &apos;auto_include_flag&apos;, False)&quot;</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <option>
              <replaceable>rename_registered_analysis_component(analysis_context,old_component_name,new_component_name)</replaceable>
            </option>
          </term>
          <listitem>
            <para>Renames the component from the <replaceable>old_component_name</replaceable>
            to <replaceable>new_component_name</replaceable>. Therefore the component with the
            <replaceable>old_component_name</replaceable> is deleted from the registered components
            and registered with the <replaceable>new_component_name</replaceable>.</para>
            <para><replaceable>example</replaceable>: aminerremotecontrol --exec 
           &quot;rename_registered_analysis_component(analysis_context,&apos;NewMatchPath&apos;,&apos;NewMatchPathDetector&apos;)&quot;</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <option>
              <replaceable>add_handler_to_atom_filter_and_register_analysis_component(analysis_context,atom_handler,component,component_name)</replaceable>
            </option>
          </term>
          <listitem>
            <para>Adds the <replaceable>component</replaceable> to the <replaceable>atom_filter</replaceable> and registers
            it with the <replaceable>component_name</replaceable>.</para>
            <para><replaceable>example</replaceable>: aminerremotecontrol --exec 
           &quot;add_handler_to_atom_filter_and_register_analysis_component(analysis_context, &apos;AtomFilter&apos;,
           NewMatchPathDetector(analysis_context.aminer_config, analysis_context.atomizer_factory.atom_handler_list, auto_include_flag=True), &apos;NewMatchPathDet&apos;)&quot;</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <option>
              <replaceable>print_config_property(analysis_context,property_name)</replaceable>
            </option>
          </term>
          <listitem>
            <para>Prints the property with the <replaceable>property_name</replaceable>
            from the current AminerConfig.</para>
            <para><replaceable>example</replaceable>: aminerremotecontrol --exec 
            &quot;print_config_property(analysis_context,&apos;LogResourceList&apos;)&quot;</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <option>
              <replaceable>print_attribute_of_registered_analysis_component(analysis_context,component_name, attribute)</replaceable>
            </option>
          </term>
          <listitem>
            <para>Prints the <replaceable>attribute</replaceable> of the component 
            with the <replaceable>component_name</replaceable>.</para>
            <para><replaceable>example</replaceable>: aminerremotecontrol --exec 
            &quot;print_attribute_of_registered_analysis_component(analysis_context,&apos;NewMatchPath&apos;, &apos;auto_include_flag&apos;)&quot;</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <option>
              <replaceable>print_current_config(analysis_context)</replaceable>
            </option>
          </term>
          <listitem>
            <para>Prints the current AminerConfig. It is strongly recommended to use the 
            <option>--string-response</option> parameter for better readability.</para>
            <para><replaceable>example</replaceable>: aminerremotecontrol --exec 
            &quot;print_current_config(analysis_context)&quot; --string-response</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <option>
              <replaceable>save_current_config(analysis_context,destination_file)</replaceable>
            </option>
          </term>
          <listitem>
            <para>Saves the current AminerConfig into <replaceable>destination_file</replaceable>.
            <replaceable>destination_file</replaceable> must have write permissions by the
             aminerremotecontrol process or it returns an <option>PermissionError</option>.</para>
            <para><replaceable>example</replaceable>: aminerremotecontrol --exec
             &quot;save_current_config(analysis_context,&apos;/tmp/config.py&apos;)&quot;</para>
          </listitem>
        </varlistentry>
		<varlistentry>
          <term>
            <option>
              <replaceable>persist_all()</replaceable>
            </option>
          </term>
          <listitem>
            <para>Saves all persistence data by calling PersistenceUtil.persist_all().</para>
            <para><replaceable>example</replaceable>: aminerremotecontrol --exec
             &quot;persist_all()&quot;</para>
          </listitem>
        </varlistentry>
		<varlistentry>
          <term>
            <option>
              <replaceable>create_backup()</replaceable>
            </option>
          </term>
          <listitem>
            <para>Creates a backup of the current persistence directory and saves it in
			 {persistence_dir}/backup/{timestamp}. Use this preferably after persist_all().</para>
            <para><replaceable>example</replaceable>: aminerremotecontrol --exec
             &quot;create_backup()&quot;</para>
          </listitem>
        </varlistentry>
		<varlistentry>
          <term>
            <option>
              <replaceable>list_backups()</replaceable>
            </option>
          </term>
          <listitem>
            <para>Returns a list of all existing persistence backups.</para>
            <para><replaceable>example</replaceable>: aminerremotecontrol --exec
             &quot;list_backups()&quot;</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <option>
              <replaceable>allowlist_event_in_component(analysis_context,component_name,event_data,allowlisting_data=None)</replaceable>
            </option>
          </term>
          <listitem>
            <para>Allowlists a path from <replaceable>event_data</replaceable> with the
             allowlist_event-method from the corresponding class of the component with the
            <replaceable>component_name</replaceable>. Only the following classes
             support allowlisting: <replaceable>EnhancedNewMatchPathValueComboDetector </replaceable>, <replaceable>MissingMatchPathValueDetector</replaceable>, 
             <replaceable>NewMatchPathDetector</replaceable> and 
             <replaceable>NewMatchPathValueComboDetector</replaceable>.
             For most of the components no <replaceable>allowlisting_data</replaceable>
             is needed and the <replaceable>event_data</replaceable> is a path. The
            <replaceable>NewMatchPathDetector</replaceable> supports a list of multiple 
             pathes. The <replaceable>MissingMatchPathValueComboDetector</replaceable> 
             needs an integer as <replaceable>allowlisting_data</replaceable>. A positive value
             sets the interval in seconds to the value. -1 sets the interval to the default value of 3600. 
             A negative value removes the missingMatchPath.
             Please read the examples of this method to use the correct parameters.</para>
            <para><replaceable>example</replaceable>: aminerremotecontrol --exec 
            &quot;allowlist_event_in_component(analysis_context,&apos;EnhancedNewMatchPathValueComboDetector&apos;,&apos;new/path&apos;)&quot;</para>
            <para><replaceable>example</replaceable>: aminerremotecontrol --exec 
            &quot;allowlist_event_in_component(analysis_context,&apos;MissingMatchPathValueDetector&apos;,&apos;new/path&apos;,-11)&quot;</para>
            <para><replaceable>example</replaceable>: aminerremotecontrol --exec 
            &quot;allowlist_event_in_component(analysis_context,&apos;NewMatchPathDetector&apos;,[&apos;new/path&apos;])&quot;</para>
            <para><replaceable>example</replaceable>: aminerremotecontrol --exec 
            &quot;allowlist_event_in_component(analysis_context,&apos;NewMatchPathValueComboDetector&apos;,&apos;new/path&apos;)&quot;</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <option>
              <replaceable>dump_events_from_history(analysis_context,history_component_name,dump_event_id)</replaceable>
            </option>
          </term>
          <listitem>
            <para>This method returns the string representation of a history event with the <replaceable>dump_event_id</replaceable>.
            If no event with the <replaceable>dump_event_id</replaceable> could be found, the message
            &quot;FAILURE: the event with <replaceable>dump_event_id</replaceable> could not be found!&quot;
            is returned. <replaceable>history_component_name</replaceable> is the registered component of the class
            <replaceable>VolatileLogarithmicBackoffEventHistory</replaceable>.</para>
            <para><replaceable>example</replaceable>: aminerremotecontrol --exec 
            &quot;dump_events_from_history(analysis_context,&apos;VolatileLogarithmicBackoffEventHistory&apos;,12)&quot;</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <option>
              <replaceable>ignore_events_from_history(analysis_context,history_component_name,event_ids)</replaceable>
            </option>
          </term>
          <listitem>
            <para>This method deletes the events with the <replaceable>event_ids</replaceable> from the history.
            <replaceable>history_component_name</replaceable> is the registered component of the class
            <replaceable>VolatileLogarithmicBackoffEventHistory</replaceable>. The number of deleted
            events is returned.</para>
            <para><replaceable>example</replaceable>: aminerremotecontrol --exec 
            &quot;ignore_events_from_history(analysis_context,&apos;VolatileLogarithmicBackoffEventHistory&apos;,[12,13,15])&quot;</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <option>
              <replaceable>list_events_from_history(analysis_context,history_component_name,max_event_count=None)</replaceable>
            </option>
          </term>
          <listitem>
            <para>This method lists <replaceable>max_event_count</replaceable> events from the history.
            <replaceable>history_component_name</replaceable> is the registered component of the class
            <replaceable>VolatileLogarithmicBackoffEventHistory</replaceable>. If 
            <replaceable>max_event_count</replaceable> is None, all events from the history are returned.</para>
            <para><replaceable>example</replaceable>: aminerremotecontrol --exec 
            &quot;list_events_from_history(analysis_context,&apos;VolatileLogarithmicBackoffEventHistory&apos;,600)&quot;</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <option>
              <replaceable>allowlist_events_from_history(analysis_context,history_component_name,id_spec_list,allowlisting_data=None)</replaceable>
            </option>
          </term>
          <listitem>
            <para>This method allowlists the events with the ids in the<replaceable>id_spec_list</replaceable> from the history.
            <replaceable>history_component_name</replaceable> is the registered component of the class
            <replaceable>VolatileLogarithmicBackoffEventHistory</replaceable>. The allowlisting response is returned.</para>
            <para><replaceable>example</replaceable>: aminerremotecontrol --exec 
            &quot;allowlist_events_from_history(analysis_context,&apos;VolatileLogarithmicBackoffEventHistory&apos;,[12,13,15])&quot;</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect2>
    <refsect2 id="PropertyNames">
      <title>Valid Property Names</title>
      <variablelist>
        <varlistentry>
          <term>
            <replaceable>MailAlerting.TargetAddress</replaceable>
          </term>
          <listitem>
            <para><replaceable>Value</replaceable>: &apos;E-Mail Address&apos;</para>
            <para><replaceable>Example</replaceable>: aminerremotecontrol --exec 
            &quot;change_config_property(analysis_context, &apos;MailAlerting.TargetAddress&apos;,
            &apos;root@localhost&apos;)&quot;</para>
            <para>Define a target e-mail address to send alerts to. When undefined, no e-mail notification hooks are added.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <replaceable>MailAlerting.FromAddress</replaceable>
          </term>
          <listitem>
            <para><replaceable>Value</replaceable>: &apos;E-Mail Address&apos;</para>
            <para><replaceable>Example</replaceable>: aminerremotecontrol --exec 
            &quot;change_config_property(analysis_context, &apos;MailAlerting.FromAddress&apos;,
            &apos;root@localhost&apos;)&quot;</para>
            <para>Sender address of e-mail alerts.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <replaceable>MailAlerting.SubjectPrefix</replaceable>
          </term>
          <listitem>
            <para><replaceable>Value</replaceable>: &apos;String&apos;</para>
            <para><replaceable>Example</replaceable>: aminerremotecontrol --exec 
            &quot;change_config_property(analysis_context, &apos;MailAlerting.SubjectPrefix&apos;,
            &apos;aminer Alerts:&apos;)&quot;</para>
            <para>Define, which text should be prepended to the standard aminer subject. 
            Defaults to &quot;aminer Alerts:&quot;</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <replaceable>MailAlerting.EventCollectTime</replaceable>
          </term>
          <listitem>
            <para><replaceable>Value</replaceable>: Seconds (Integer)</para>
            <para><replaceable>Example</replaceable>: aminerremotecontrol --exec 
            &quot;change_config_property(analysis_context, &apos;MailAlerting.EventCollectTime&apos;, 10)&quot;</para>
            <para>Define how many seconds to wait after a first event triggered the alerting procedure 
            before really sending out the e-mail. In that timespan, events are collected and will be sent 
            all using a single e-mail. Defaults to 10 seconds.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <replaceable>MailAlerting.MinAlertGap</replaceable>
          </term>
          <listitem>
            <para><replaceable>Value</replaceable>: Seconds (Integer)</para>
            <para><replaceable>Example</replaceable>: aminerremotecontrol --exec 
            &quot;change_config_property(analysis_context, &apos;MailAlerting.MinAlertGap&apos;, 600)&quot;</para>
            <para>Define the minimum time between two alert e-mails in seconds to avoid spamming. 
             All events during this timespan are collected and sent out with the next report. Defaults to 600 seconds.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <replaceable>MailAlerting.MaxAlertGap</replaceable>
          </term>
          <listitem>
            <para><replaceable>Value</replaceable>: Seconds (Integer)</para>
            <para><replaceable>Example</replaceable>: aminerremotecontrol --exec 
            &quot;change_config_property(analysis_context, &apos;MailAlerting.MaxAlertGap&apos;, 1000)&quot;</para>
            <para>Define the maximum time between two alert e-mails in seconds. 
            When undefined this defaults to &quot;MailAlerting.MinAlertGap&quot;. 
            Otherwise this will activate an exponential backoff to reduce messages 
            during permanent error states by increasing the alert gap by 50% when more 
            alert-worthy events were recorded while the previous gap time was not yet elapsed.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <replaceable>MailAlerting.MaxEventsPerMessage</replaceable>
          </term>
          <listitem>
            <para><replaceable>Value</replaceable>: Number of messages (Integer)</para>
            <para><replaceable>Example</replaceable>: aminerremotecontrol --exec 
            &quot;change_config_property(analysis_context, &apos;MailAlerting.MaxEventsPerMessage&apos;, 1000)&quot;</para>
            <para>Define how many events should be included in one alert mail at most. This defaults to 1000.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <replaceable>LogPrefix</replaceable>
          </term>
          <listitem>
            <para><replaceable>Value</replaceable>: &apos;String&apos;</para>
            <para><replaceable>Example</replaceable>: aminerremotecontrol --exec 
            &quot;change_config_property(analysis_context, &apos;LogPrefix&apos;, &apos;
            Original log line: &apos;)&quot;</para>
            <para>Most analysis components implement the output_log_line-property, which is True by default.
              Define a prefix to the original captured log lines. This defaults to &apos;&apos;.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>
            <replaceable>Resources.MaxMemoryUsage</replaceable>
          </term>
          <listitem>
            <para><replaceable>Value</replaceable>: &apos;Allowed RAM usage in Megabytes 
            (Integer: 32-maxSystemRAM)&apos;</para>
            <para><replaceable>Example</replaceable>: aminerremotecontrol --exec 
            &quot;change_config_property(analysis_context, &apos;Resources.MaxMemoryUsage&apos;, -1)&quot;</para>
            <para>This property limits the maximal possible RAM in MB which the aminer process can use. 
            Be careful at choosing the value, as a shortage of memory causes a MemoryError. This defaults to 
           -1, which means that there is no limit.</para>
          </listitem>
        </varlistentry>
		<varlistentry>
          <term>
            <replaceable>Core.PersistencePeriod</replaceable>
          </term>
          <listitem>
            <para><replaceable>Value</replaceable>: Seconds (Integer)</para>
            <para><replaceable>Example</replaceable>: aminerremotecontrol --exec
             &quot;change_config_property(analysis_context, &apos;Core.PersistencePeriod&apos;, 300)&quot;</para>
            <para>Use this property to change the time between persisting data in analysis components.
			 Defaults to 600 seconds.</para>
          </listitem>
        </varlistentry>
		<varlistentry>
          <term>
            <replaceable>Log.StatisticsLevel</replaceable>
          </term>
          <listitem>
            <para><replaceable>Value</replaceable>: Level [0, 1, 2]</para>
            <para><replaceable>Example</replaceable>: aminerremotecontrol --exec
             &quot;change_config_property(analysis_context, &apos;Log.StatisticsLevel&apos;, 2)&quot;</para>
            <para>Change the amount of data saved in statistics. Possible stat-levels are 0 for no statistics, 1 for
             normal statistic level and 2 for verbose statistics. Defaults to 1.</para>
          </listitem>
        </varlistentry>
		<varlistentry>
          <term>
            <replaceable>Log.DebugLevel</replaceable>
          </term>
          <listitem>
            <para><replaceable>Value</replaceable>: Level [0, 1, 2]</para>
            <para><replaceable>Example</replaceable>: aminerremotecontrol --exec
             &quot;change_config_property(analysis_context, &apos;Log.DebugLevel&apos;, 2)&quot;</para>
            <para>Change the debug logging level. Possible debug-levels are 0 for no logging, 1 for normal output
            (INFO and above), 2 for printing all debug information. Defaults to 1.</para>
          </listitem>
        </varlistentry>
		<varlistentry>
          <term>
            <replaceable>Log.StatisticsPeriod</replaceable>
          </term>
          <listitem>
            <para><replaceable>Value</replaceable>: Seconds (Integer)</para>
            <para><replaceable>Example</replaceable>: aminerremotecontrol --exec
             &quot;change_config_property(analysis_context, &apos;Log.StatisticsPeriod&apos;, 360)&quot;</para>
            <para>Change how often statistics are logged and reset. This defaults to 3600 seconds.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </refsect2>
  </refsect1>
  <refsect1 id="files">
    <title>FILES</title>
    <variablelist>
      <varlistentry>
        <term>
          <filename>/var/run/aminer-remote.socket</filename>
        </term>
        <listitem>
          <para>This is the default remote control socket used
          when not changed using the --control-socket option.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsect1>
  <refsect1 id="bugs">
    <title>BUGS</title>
    <para>
      Report bugs via your distribution&apos;s bug tracking system.
      For bugs in the the software trunk, report via
      at <ulink url="https://bugs.launchpad.net/logdata-anomaly-miner/+filebug"/>.</para>
  </refsect1>
  <refsect1 id="see_also">
    <title>SEE ALSO</title>
<!-- In alpabetical order. -->    <para>
      <citerefentry>
        <refentrytitle>aminer</refentrytitle>
        <manvolnum>1</manvolnum>
      </citerefentry>
    </para>
  </refsect1>
</refentry>
